From f04ec30dad6614dfc042ac117535a907fba49089 Mon Sep 17 00:00:00 2001
From: Jakub Wilk <jwilk@jwilk.net>
Date: Sat, 30 Jul 2016 19:23:38 +0200
Subject: [PATCH] fix typos

---
 src/ctypes.c | 6 +++---
 src/unpack.c | 2 +-
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/ctypes.c b/src/ctypes.c
index 384b274..7d976ee 100644
--- a/src/ctypes.c
+++ b/src/ctypes.c
@@ -399,7 +399,7 @@ static int call_foreign_function(WORD_LIST *list)
             // Save the result to the requested location.
             bind_variable(resultname, retval, 0);
 
-            // Bash maintains it's own copy of this string, so we can throw it away.
+            // Bash maintains its own copy of this string, so we can throw it away.
             free(retval);
         }
     }
@@ -455,7 +455,7 @@ static char *dlcall_usage[] = {
     "    $ dlcall lchown string:/tmp/foo int:$UID int:-1",
     "",
     "Options:",
-    "    -a abi      Use the specifed ABI rather than the default.",
+    "    -a abi      Use the specified ABI rather than the default.",
     "    -r type     The function returns the specified type (default: long).",
     "    -n var      Use var instead of DLRETVAL to store the result.",
     "    -h handle   Use handle instead of RTLD_DEFAULT (Usually ${DLRETVAL[soname]})."
@@ -548,7 +548,7 @@ static char *dlopen_usage[] = {
     "Usage:",
     "It might be tempting to write this:",
     "",
-    "    $ handle=$(dlopen libc.so.6) # DONT DO THIS, BROKEN",
+    "    $ handle=$(dlopen libc.so.6) # DON'T DO THIS, BROKEN",
     "",
     "But this won't work, because the handle will only exist in the subshell.",
     "Instead, you should do this:",
diff --git a/src/unpack.c b/src/unpack.c
index 8669908..e50c33b 100644
--- a/src/unpack.c
+++ b/src/unpack.c
@@ -101,7 +101,7 @@ int pack_decode_element_assoc(BUCKET_CONTENTS *element, void *user)
 
     ctx = user;
 
-    // Check if we've been passed an unitialized type (therefore 0)
+    // Check if we've been passed an uninitialized type (therefore 0)
     if (strchr(element->data, ':') == NULL) {
         if (decode_type_prefix(element->data, "0", &ctx->ptrtype, (void **)&value, NULL) == true) {
             // Looks like that worked, skip decoding.
-- 
2.12.0

